{"ast":null,"code":"import { AGREGAR_PRODUCTO, AGREGAR_PRODUCTO_EXITO, AGREGAR_PRODUCTO_ERROR } from '../types';\nimport clienteAxios from '../config/axios'; // Crear nuevos productos\n\nexport function crearNuevoProductoAction(producto) {\n  return async dispatch => {\n    dispatch(agregarProducto());\n\n    try {\n      // Insertar en la API\n      await clienteAxios.post('/productos', producto); // Si todo es correcto actualizamos el state\n\n      dispatch(agregarProductoExito(producto));\n    } catch (error) {\n      console.log(error); // Si hay un error cambiar el state\n\n      dispatch(agregarProductoError(true));\n    }\n  };\n}\n\nconst agregarProducto = () => ({\n  type: AGREGAR_PRODUCTO,\n  payload: true\n}); // Si el producto se guarda en la DB\n\n\nconst agregarProductoExito = producto => ({\n  type: AGREGAR_PRODUCTO_EXITO,\n  payload: producto\n}); // Si hubo un error\n\n\nconst agregarProductoError = estado => ({\n  type: AGREGAR_PRODUCTO_ERROR,\n  payload: estado\n});","map":{"version":3,"sources":["/Users/eburgos/Desktop/cursoReact/crudredux/src/actions/productoActions.js"],"names":["AGREGAR_PRODUCTO","AGREGAR_PRODUCTO_EXITO","AGREGAR_PRODUCTO_ERROR","clienteAxios","crearNuevoProductoAction","producto","dispatch","agregarProducto","post","agregarProductoExito","error","console","log","agregarProductoError","type","payload","estado"],"mappings":"AAAA,SACAA,gBADA,EAEAC,sBAFA,EAGAC,sBAHA,QAIO,UAJP;AAKA,OAAOC,YAAP,MAAyB,iBAAzB,C,CAEA;;AACA,OAAO,SAASC,wBAAT,CAAkCC,QAAlC,EAA4C;AAC/C,SAAO,MAAOC,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAAEC,eAAe,EAAjB,CAAR;;AAEA,QAAI;AACA;AACA,YAAMJ,YAAY,CAACK,IAAb,CAAkB,YAAlB,EAAgCH,QAAhC,CAAN,CAFA,CAIA;;AACAC,MAAAA,QAAQ,CAAEG,oBAAoB,CAACJ,QAAD,CAAtB,CAAR;AAEH,KAPD,CAOE,OAAOK,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADY,CAEZ;;AACAJ,MAAAA,QAAQ,CAAEO,oBAAoB,CAAC,IAAD,CAAtB,CAAR;AACH;AACJ,GAfD;AAgBH;;AAED,MAAMN,eAAe,GAAG,OAAO;AAC3BO,EAAAA,IAAI,EAAEd,gBADqB;AAE3Be,EAAAA,OAAO,EAAE;AAFkB,CAAP,CAAxB,C,CAKA;;;AACA,MAAMN,oBAAoB,GAAGJ,QAAQ,KAAK;AACtCS,EAAAA,IAAI,EAAEb,sBADgC;AAEtCc,EAAAA,OAAO,EAAEV;AAF6B,CAAL,CAArC,C,CAKA;;;AACA,MAAMQ,oBAAoB,GAAIG,MAAD,KAAa;AACtCF,EAAAA,IAAI,EAAEZ,sBADgC;AAEtCa,EAAAA,OAAO,EAAEC;AAF6B,CAAb,CAA7B","sourcesContent":["import {  \nAGREGAR_PRODUCTO,\nAGREGAR_PRODUCTO_EXITO,\nAGREGAR_PRODUCTO_ERROR,\n} from '../types';\nimport clienteAxios from '../config/axios';\n\n// Crear nuevos productos\nexport function crearNuevoProductoAction(producto) {\n    return async (dispatch) => {\n        dispatch( agregarProducto() );\n\n        try {\n            // Insertar en la API\n            await clienteAxios.post('/productos', producto);\n\n            // Si todo es correcto actualizamos el state\n            dispatch( agregarProductoExito(producto) );\n\n        } catch (error) {\n            console.log(error);\n            // Si hay un error cambiar el state\n            dispatch( agregarProductoError(true) );\n        }\n    }\n}\n\nconst agregarProducto = () => ({\n    type: AGREGAR_PRODUCTO,\n    payload: true\n})\n\n// Si el producto se guarda en la DB\nconst agregarProductoExito = producto => ({\n    type: AGREGAR_PRODUCTO_EXITO,\n    payload: producto\n})\n\n// Si hubo un error\nconst agregarProductoError = (estado) => ({\n    type: AGREGAR_PRODUCTO_ERROR,\n    payload: estado\n})"]},"metadata":{},"sourceType":"module"}