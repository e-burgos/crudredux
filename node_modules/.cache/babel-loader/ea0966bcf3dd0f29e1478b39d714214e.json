{"ast":null,"code":"var _jsxFileName = \"/Users/eburgos/Desktop/cursoReact/crudredux/src/components/NuevoProducto.js\";\nimport React, { useState } from 'react'; // useDispatch se utiliza para mandar a ejecutar las acciones que tengamos y \n// useSelector es la forma en la que se va a acceder al state dentro del componente\n\nimport { useDispatch, useSelector } from 'react-redux'; // Actions de Redux\n\nimport { crearNuevoProductoAction } from '../actions/productoActions';\n\nconst NuevoProducto = ({\n  history\n}) => {\n  // state del componente\n  const [nombre, guardarNombre] = useState('');\n  const [precio, guardarPrecio] = useState(0); // utilizar useDispatch para que retorne un funcion\n\n  const dispatch = useDispatch(); // Acceder al state del error\n\n  const cargando = useSelector(state => state.productos.loading);\n  const error = useSelector(state => state.productos.error); // Dispatch mandara a ejecutar la funciones que se tengan en el action\n  // En este caso manda a llamar el action de productoAction \n\n  const agregarProducto = producto => dispatch(crearNuevoProductoAction(producto)); // Cuando el usuario haga submit\n\n\n  const submitNuevoProducto = e => {\n    e.preventDefault(); // Validar formulario\n\n    if (nombre.trim() === '' || precio <= 0) {\n      return;\n    } // Revisar errores\n    // Crear el nuevo producto\n\n\n    agregarProducto({\n      nombre,\n      precio\n    }); // redireccionar \n\n    history.push('/');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center mb-4 font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"Agregar Nuevo Producto\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitNuevoProducto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"from-group mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, \"Nombre Producto\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Ingrese un nombre\",\n    name: \"nombre\",\n    value: nombre,\n    onChange: e => guardarNombre(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"from-group mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, \"Precio Producto\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    placeholder: \"Ingrese su precio\",\n    name: \"precio\",\n    value: precio,\n    onChange: e => guardarPrecio(Number(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary font-weight-bold text-uppercase d-block w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, \"Agregar\")), cargando ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 38\n    }\n  }, \"'Cargando...'\") : null, error ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"alert alert-danger p2 mt-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 35\n    }\n  }, \"Hubo un error\") : null))));\n};\n\nexport default NuevoProducto;","map":{"version":3,"sources":["/Users/eburgos/Desktop/cursoReact/crudredux/src/components/NuevoProducto.js"],"names":["React","useState","useDispatch","useSelector","crearNuevoProductoAction","NuevoProducto","history","nombre","guardarNombre","precio","guardarPrecio","dispatch","cargando","state","productos","loading","error","agregarProducto","producto","submitNuevoProducto","e","preventDefault","trim","push","target","value","Number"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n// useDispatch se utiliza para mandar a ejecutar las acciones que tengamos y \n// useSelector es la forma en la que se va a acceder al state dentro del componente\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Actions de Redux\nimport { crearNuevoProductoAction } from '../actions/productoActions';\n\nconst NuevoProducto = ({history}) => {\n\n    // state del componente\n    const [ nombre, guardarNombre ] = useState('');\n    const [ precio, guardarPrecio ] = useState(0);\n\n    // utilizar useDispatch para que retorne un funcion\n    const dispatch = useDispatch();\n    \n    // Acceder al state del error\n    const cargando = useSelector((state) => state.productos.loading);\n    const error = useSelector((state) => state.productos.error);\n\n    // Dispatch mandara a ejecutar la funciones que se tengan en el action\n    // En este caso manda a llamar el action de productoAction \n    const agregarProducto = producto => dispatch( crearNuevoProductoAction(producto) );\n\n    // Cuando el usuario haga submit\n    const submitNuevoProducto = e => {\n        e.preventDefault();\n\n        // Validar formulario\n        if( nombre.trim() === '' || precio <= 0 ) {\n            return;\n        }\n\n        // Revisar errores\n\n        // Crear el nuevo producto\n        agregarProducto({\n            nombre,\n            precio\n        });\n\n        // redireccionar \n        history.push('/');\n    }\n\n    return ( \n        <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h2 className=\"text-center mb-4 font-weight-bold\">\n                            Agregar Nuevo Producto\n                        </h2>\n\n                        <form\n                            onSubmit={submitNuevoProducto}\n                        >\n                            <div className=\"from-group mb-4\">\n                                <label>Nombre Producto</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Ingrese un nombre\"\n                                    name=\"nombre\"\n                                    value={nombre}\n                                    onChange={e => guardarNombre(e.target.value)} \n                                />\n                            </div>\n                            <div className=\"from-group mb-4\">\n                                <label>Precio Producto</label>\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    placeholder=\"Ingrese su precio\"\n                                    name=\"precio\"\n                                    value={precio}\n                                    onChange={e => guardarPrecio(Number(e.target.value))}  \n                                />\n                            </div>\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\n                            >Agregar</button>\n                        </form>\n                        { cargando ? <p>'Cargando...'</p> : null }\n                        { error ? <p className=\"alert alert-danger p2 mt-4 text-center\">Hubo un error</p> : null }\n                    </div>\n                </div>\n            </div>\n        </div>\n     );\n}\n \nexport default NuevoProducto;"]},"metadata":{},"sourceType":"module"}