{"version":3,"sources":["components/Header.js","config/axios.js","actions/productoActions.js","types/index.js","components/Producto.js","components/Productos.js","actions/alertaActions.js","components/NuevoProducto.js","components/EditarProducto.js","reducers/productosReducer.js","reducers/alertaReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","clienteAxios","axios","create","baseURL","agregarProducto","type","payload","agregarProductoExito","producto","agregarProductoError","estado","descargarProductos","descargaProductosExitosa","productos","descargaProductosError","obtenerProductoEliminar","id","eliminarProductoExito","eliminarProductoError","obtenerProductoEditar","editarProducto","editarProductoExito","editarProductoError","Producto","nombre","precio","dispatch","useDispatch","history","useHistory","confirmarEliminarProducto","swalWithBootstrapButtons","Swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","isConfirmed","a","delete","console","log","borrarProductoAction","dismiss","DismissReason","cancel","redireccionarEdicion","obtenerProductoEditarAction","push","onClick","Productos","useEffect","get","respuesta","data","useSelector","state","error","cargando","loading","scope","length","map","key","mostrarAlerta","alerta","ocultarAlerta","NuevoProducto","useState","guardarNombre","guardarPrecio","post","crearNuevoProductoAction","classes","msg","onSubmit","e","preventDefault","trim","mostrarAlertaAction","placeholder","name","value","onChange","target","Number","EditarProducto","guardarProducto","productoeditar","onChangeFormulario","put","editarProductoAction","initialState","productoeliminar","combineReducers","action","filter","store","createStore","reducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e27937ca.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n    return ( \n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary justify-content-between\">\n            <div className=\"container\">\n                <h1><Link to={'/'} className=\"text-light\" >CRUD - React, Redux, REST API & Axios</Link></h1>\n            </div>\n            <Link to={'/productos/nuevo'}\n                className=\"btn btn-danger nuevo-post d-block d-md-inline-block\"\n            >Agregar Producto &#43;</Link>\n        </nav>\n     );\n}\n \nexport default Header;","import axios from 'axios';\n\nconst clienteAxios = axios.create({\n    baseURL: 'https://crud-reduxserver.herokuapp.com/'\n});\n\nexport default clienteAxios;","import {  \nAGREGAR_PRODUCTO,\nAGREGAR_PRODUCTO_EXITO,\nAGREGAR_PRODUCTO_ERROR,\nCOMENZAR_DESCARGA_PRODUCTOS,\nDESCARGA_PRODUCTOS_EXITO,\nDESCARGA_PRODUCTOS_ERROR,\nOBTENER_PRODUCTO_ELIMINAR,\nPRODUCTO_ELIMINADO_EXITO,\nPRODUCTO_ELIMINADO_ERROR,\nOBTENER_PRODUCTO_EDITAR,\nCOMENZAR_EDICION_PRODUCTO,\nPRODUCTO_EDITADO_EXITO,\nPRODUCTO_EDITADO_ERROR\n} from '../types';\nimport clienteAxios from '../config/axios';\nimport swalWithBootstrapButtons from 'sweetalert2';\nimport Swal from 'sweetalert2';\n\n// Crear nuevos productos\nexport function crearNuevoProductoAction(producto) {\n    return async (dispatch) => {\n        dispatch( agregarProducto() );\n\n        try {\n            // Insertar en la API\n            await clienteAxios.post('/productos', producto);\n\n            // Si todo es correcto actualizamos el state\n            dispatch( agregarProductoExito(producto) );\n\n            // Alerta\n            Swal.fire(\n                'Agregado',\n                'Se agrego un nuevo producto',\n                'success'\n            );\n\n        } catch (error) {\n            console.log(error);\n            // Si hay un error cambiar el state\n            dispatch( agregarProductoError(true) );\n\n            // Alerta error\n            Swal.fire({\n                icon: 'error',\n                title: 'Hubo un error',\n                text: 'Por favor intenta de nuevo.'\n            });\n        }\n    }\n}\n\nconst agregarProducto = () => ({\n    type: AGREGAR_PRODUCTO,\n    payload: true\n})\n\n// Si el producto se guarda en la DB\nconst agregarProductoExito = producto => ({\n    type: AGREGAR_PRODUCTO_EXITO,\n    payload: producto\n})\n\n// Si hubo un error\nconst agregarProductoError = (estado) => ({\n    type: AGREGAR_PRODUCTO_ERROR,\n    payload: estado\n})\n\n// Funcion que descarga los productos de la DB\nexport function obtenerProductosAction() {\n    return async (dispatch) => {\n        dispatch( descargarProductos() );\n\n        try {\n            const respuesta = await clienteAxios.get('/productos');\n            dispatch( descargaProductosExitosa(respuesta.data) );\n\n        } catch (error) {\n            console.log(error);\n            dispatch( descargaProductosError() );\n        }\n    }\n}\n\nconst descargarProductos = () => ({\n    type: COMENZAR_DESCARGA_PRODUCTOS,\n    payload: true\n})\n\nconst descargaProductosExitosa = (productos) => ({\n    type: DESCARGA_PRODUCTOS_EXITO,\n    payload: productos\n})\n\nconst descargaProductosError = () => ({\n    type: DESCARGA_PRODUCTOS_ERROR,\n    payload: true\n})\n\n// Selecciona y elimina el producto \nexport function borrarProductoAction(id) {\n    return async (dispatch) => {\n        dispatch( obtenerProductoEliminar(id) );\n\n        try {\n            await clienteAxios.delete(`/productos/${id}`);\n            dispatch( eliminarProductoExito() );\n\n            // Si se elimina mostrar alerta\n            swalWithBootstrapButtons.fire(\n            'Eliminado!',\n            'Este producto fue eliminado.',\n            'success'\n            )\n\n        } catch (error) {\n            console.log(error);\n            dispatch( eliminarProductoError() )\n        }\n        \n    }\n}\n\nconst obtenerProductoEliminar = (id) => ({\n    type: OBTENER_PRODUCTO_ELIMINAR,\n    payload: id\n})\n\nconst eliminarProductoExito = () => ({\n    type: PRODUCTO_ELIMINADO_EXITO,\n    payload: null\n})\n\nconst eliminarProductoError = () => ({\n    type: PRODUCTO_ELIMINADO_ERROR,\n    payload: true\n})\n\n// Obtener un producto para su edicion\nexport function obtenerProductoEditarAction(producto) {\n    return async (dispatch) => {\n        dispatch( obtenerProductoEditar(producto) );\n    }\n}\n\nconst obtenerProductoEditar = (producto) => ({\n    type: OBTENER_PRODUCTO_EDITAR,\n    payload: producto\n})\n\n// Editar un producto en la api y el state\nexport function editarProductoAction(producto) {\n    return async (dispatch) => {\n        dispatch( editarProducto() );\n\n        try {\n            await clienteAxios.put(`/productos/${producto.id}`, producto);\n            dispatch( editarProductoExito(producto) );\n\n        } catch (error) {\n            console.log(error);\n            dispatch( editarProductoError() );\n        }\n    }\n}\n\nconst editarProducto = () => ({\n    type: COMENZAR_EDICION_PRODUCTO\n})\n\nconst editarProductoExito = (producto) => ({\n    type: PRODUCTO_EDITADO_EXITO,\n    payload: producto\n})\n\nconst editarProductoError = () => ({\n    type: PRODUCTO_EDITADO_ERROR,\n    payload: true\n})","export const AGREGAR_PRODUCTO = 'AGREGAR_PRODUCTO';\nexport const AGREGAR_PRODUCTO_EXITO = 'AGREGAR_PRODUCTO_EXITO';\nexport const AGREGAR_PRODUCTO_ERROR = 'AGREGAR_PRODUCTO_ERROR';\n\nexport const COMENZAR_DESCARGA_PRODUCTOS = 'COMENZAR_DESCARGA_PRODUCTOS';\nexport const DESCARGA_PRODUCTOS_EXITO = 'DESCARGA_PRODUCTOS_EXITO';\nexport const DESCARGA_PRODUCTOS_ERROR = 'DESCARGA_PRODUCTOS_ERROR';\n\nexport const OBTENER_PRODUCTO_ELIMINAR = 'OBTENER_PRODUCTO_ELIMINAR';\nexport const PRODUCTO_ELIMINADO_EXITO = 'PRODUCTO_ELIMINADO_EXITO';\nexport const PRODUCTO_ELIMINADO_ERROR = 'PRODUCTO_ELIMINADO_ERROR';\n\nexport const OBTENER_PRODUCTO_EDITAR = 'OBTENER_PRODUCTO_EDITAR';\nexport const COMENZAR_EDICION_PRODUCTO = 'COMENZAR_EDICION_PRODUCTO';\nexport const PRODUCTO_EDITADO_EXITO = 'PRODUCTO_EDITADO_EXITO';\nexport const PRODUCTO_EDITADO_ERROR = 'PRODUCTO_EDITADO_ERROR';\n\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\n\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Swal from 'sweetalert2';\n\n// Redux\nimport { useDispatch } from 'react-redux';\nimport { borrarProductoAction, obtenerProductoEditarAction } from '../actions/productoActions';\n\nconst Producto = ({producto}) => {\n\n    // Aplicamos destructuring\n    const { nombre, precio, id } = producto;\n\n    const dispatch = useDispatch();\n\n    // Habilitar History para redireccion \n    const history = useHistory();\n\n    const confirmarEliminarProducto = id => {\n\n        // Preguntar si confirma la eliminacion\n        const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n            confirmButton: 'btn btn-success',\n            cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n        })\n\n        swalWithBootstrapButtons.fire({\n        title: '¿Estas Seguro?',\n        text: \"Luego de eliminar este producto no podrás revertir esta acción\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si, eliminarlo',\n        cancelButtonText: 'Cancelar',\n        reverseButtons: true\n        }).then((result) => {\n        if (result.isConfirmed) {\n            // Pasar la confirmacion al action \n            dispatch( borrarProductoAction(id) );\n        } else if (\n            /* Read more about handling dismissals below */\n            result.dismiss === Swal.DismissReason.cancel\n        ) {\n            swalWithBootstrapButtons.fire(\n            'Cancelado',\n            'Tu producto esta a salvo',\n            'error'\n            )\n        }\n        }) \n    }\n\n    // Función que redirege de forma programada\n    const redireccionarEdicion = (producto) => {\n        dispatch( obtenerProductoEditarAction(producto) );\n        history.push(`/productos/editar/${producto.id}`);\n    }\n\n    return ( \n        <tr>\n            <td>{nombre}</td>\n            <td><span className=\"font-weight-bold\">$ {precio}</span></td>\n            <td className=\"acciones\">\n                <button  \n                    type=\"button\"\n                    className=\"btn btn-primary mr-2\"\n                    onClick={() => redireccionarEdicion(producto)}\n                >Editar</button>\n                <button\n                    type=\"button\"\n                    className=\"btn btn-danger\"\n                    onClick={() => confirmarEliminarProducto(id)}\n                >Eliminar</button>\n            </td>\n        </tr>\n     );\n}\n \nexport default Producto;","import React, { Fragment, useEffect } from 'react';\nimport Producto from './Producto';\n\n// Redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport { obtenerProductosAction } from '../actions/productoActions';\n\nconst Productos = () => {\n\n    // Creamos la varia de dispatch para poder usar el useDispatch\n    const dispatch = useDispatch();\n\n    // Usamos un useEffect para escuchar los cambios que se productan en la DB y listar los productos actualizados\n    useEffect(() => {\n\n        // Consultar la API\n        const cargarProductos = () => dispatch( obtenerProductosAction() );\n        cargarProductos();\n        // eslint-disable-next-line\n    }, [])\n\n    // Obtener el state (donde se almacenan los productos)\n    const productos = useSelector( state => state.productos.productos );\n    const error = useSelector( state => state.productos.error );\n    const cargando = useSelector( state => state.productos.loading );\n\n    return ( \n        <Fragment>\n            <h2 className=\"text-center my-5\">Listado de Productos</h2>\n\n            <table className=\"table table-striped\">\n                <thead className=\"bg-primary table-black text-light\">\n                    <tr>\n                        <th scope=\"col\">Nombre</th>\n                        <th scope=\"col\">Precio</th>\n                        <th scope=\"col\">Acciones</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    { productos.length === 0 ? null \n                        : productos.map( producto => (\n                            <Producto\n                            key={producto.id} \n                            producto={producto}\n                            />\n                        ))\n                    }\n                </tbody>\n            </table>\n            { productos.length === 0 ? <p className=\"alert alert-light w-100 p2 mt-4 text-center\">No hay Productos</p> : null }\n            { cargando ? <p className=\"alert alert-success p2 mt-4 text-center\">Cargando...</p> : null }\n            { error ? <p className=\"alert alert-danger p2 mt-4 text-center\">Hubo un error al obtener los productos</p> : null }\n        </Fragment>\n     );\n}\n \nexport default Productos;","import {\n    MOSTRAR_ALERTA, \n    OCULTAR_ALERTA\n} from '../types';\n\n// Muestra alerta\nexport function mostrarAlertaAction(alerta) {\n    return (dispatch) => {\n        dispatch( mostrarAlerta(alerta) )\n    }\n}\n\nconst mostrarAlerta = (alerta) => ({\n    type: MOSTRAR_ALERTA,\n    payload: alerta\n})\n\n// Ocultar alerta\nexport function ocultarAlertaAction(alerta) {\n    return(dispatch) => {\n        dispatch( ocultarAlerta() )\n    }\n}\n\nconst ocultarAlerta = () => ({\n    type: OCULTAR_ALERTA\n})","import React, { useState } from 'react';\n// useDispatch se utiliza para mandar a ejecutar las acciones que tengamos y \n// useSelector es la forma en la que se va a acceder al state dentro del componente\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Actions de Redux\nimport { crearNuevoProductoAction } from '../actions/productoActions';\nimport { mostrarAlertaAction, ocultarAlertaAction } from '../actions/alertaActions';\n\nconst NuevoProducto = ({history}) => {\n\n    // state del componente\n    const [ nombre, guardarNombre ] = useState('');\n    const [ precio, guardarPrecio ] = useState(0);\n\n    // utilizar useDispatch para que retorne un funcion\n    const dispatch = useDispatch();\n    \n    // Acceder al state del error\n    const cargando = useSelector((state) => state.productos.loading);\n    const error = useSelector((state) => state.productos.error);\n    const alerta = useSelector((state) => state.alerta.alerta);\n\n    // Dispatch mandara a ejecutar la funciones que se tengan en el action\n    // En este caso manda a llamar el action de productoAction \n    const agregarProducto = producto => dispatch( crearNuevoProductoAction(producto) );\n\n    // Cuando el usuario haga submit\n    const submitNuevoProducto = e => {\n        e.preventDefault();\n\n        // Validar formulario\n        if( nombre.trim() === '' || precio <= 0 ) {\n\n            const alerta = {\n                msg: 'Ambos compos son obligatorios',\n                classes: 'alert alert-danger text-center text-uppercase p3'\n            };\n            dispatch(mostrarAlertaAction(alerta));\n\n            return;\n        }\n\n        // Revisar errores\n        dispatch(ocultarAlertaAction());\n\n        // Crear el nuevo producto\n        agregarProducto({\n            nombre,\n            precio\n        });\n\n        // redireccionar \n        history.push('/');\n    }\n\n    return ( \n        <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h2 className=\"text-center mb-4 font-weight-bold\">\n                            Agregar Nuevo Producto\n                        </h2>\n                        { alerta ? <p className={alerta.classes}>{alerta.msg}</p> : null }\n                        <form\n                            onSubmit={submitNuevoProducto}\n                        >\n                            <div className=\"from-group mb-4\">\n                                <label>Nombre Producto</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Ingrese un nombre\"\n                                    name=\"nombre\"\n                                    value={nombre}\n                                    onChange={e => guardarNombre(e.target.value)} \n                                />\n                            </div>\n                            <div className=\"from-group mb-4\">\n                                <label>Precio Producto</label>\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    placeholder=\"Ingrese su precio\"\n                                    name=\"precio\"\n                                    value={precio}\n                                    onChange={e => guardarPrecio(Number(e.target.value))}  \n                                />\n                            </div>\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\n                            >Agregar</button>\n                        </form>\n                        { cargando ? <p>'Cargando...'</p> : null }\n                        { error ? <p className=\"alert alert-danger p2 mt-4 text-center\">Hubo un error</p> : null }\n                    </div>\n                </div>\n            </div>\n        </div>\n     );\n}\n \nexport default NuevoProducto;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n// Actions de Redux\nimport { editarProductoAction } from '../actions/productoActions';\n\nconst EditarProducto = () => {\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const [ producto, guardarProducto ] = useState({\n        nombre: '',\n        precio: ''\n    })\n\n    // Producto a editar\n    const productoeditar = useSelector( state => state.productos.productoeditar );\n\n    // Llenar el state automaticamente\n    useEffect(() => {\n        guardarProducto(productoeditar);\n    }, [productoeditar]);\n\n    // Leer los datos del formulario\n    const onChangeFormulario = e => {\n        guardarProducto({\n            ...producto,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    // Aplicamos destructuring\n    const { nombre, precio } = producto;\n\n    const submitEditarProducto = e => {\n        e.preventDefault();\n\n        dispatch( editarProductoAction(producto) );\n\n        // Redireccionar hacia el componente principal \n        history.push('/');\n    }\n\n    return ( \n        <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h2 className=\"text-center mb-4 font-weight-bold\">\n                            Editar Producto\n                        </h2>\n\n                        <form\n                        onSubmit={submitEditarProducto}\n                        >\n                            <div className=\"from-group mb-4\">\n                                <label>Nombre Producto</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Ingrese un nombre\"\n                                    name=\"nombre\"\n                                    value={nombre}\n                                    onChange={onChangeFormulario} \n                                />\n                            </div>\n                            <div className=\"from-group mb-4\">\n                                <label>Precio Producto</label>\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    placeholder=\"Ingrese su precio\"\n                                    name=\"precio\"\n                                    value={precio}\n                                    onChange={onChangeFormulario} \n                                />\n                            </div>\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\n                            >Actualizar</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n     );\n}\n \nexport default EditarProducto;","import {  \nAGREGAR_PRODUCTO,\nAGREGAR_PRODUCTO_EXITO,\nAGREGAR_PRODUCTO_ERROR,\nCOMENZAR_DESCARGA_PRODUCTOS,\nDESCARGA_PRODUCTOS_EXITO,\nDESCARGA_PRODUCTOS_ERROR,\nOBTENER_PRODUCTO_ELIMINAR,\nPRODUCTO_ELIMINADO_EXITO,\nPRODUCTO_ELIMINADO_ERROR,\nOBTENER_PRODUCTO_EDITAR,\nPRODUCTO_EDITADO_EXITO,\nPRODUCTO_EDITADO_ERROR\n} from '../types';\n\n// Cada reducer tiene su propio state\nconst initialState = {\n    productos: [],\n    error: null,\n    loading: false,\n    productoeliminar: null,\n    productoeditar: null\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case COMENZAR_DESCARGA_PRODUCTOS:\n        case AGREGAR_PRODUCTO:\n            return {\n                ...state,\n                loading: action.payload\n            }\n        case AGREGAR_PRODUCTO_EXITO:\n            return {\n                ...state,\n                loading: false,\n                productos: [...state.productos, action.payload]\n            }\n        case AGREGAR_PRODUCTO_ERROR:\n        case DESCARGA_PRODUCTOS_ERROR:\n        case PRODUCTO_ELIMINADO_ERROR:\n        case PRODUCTO_EDITADO_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        case DESCARGA_PRODUCTOS_EXITO:\n            return {\n                ...state,\n                loading: false,\n                error: null,\n                productos: action.payload\n            }\n        case OBTENER_PRODUCTO_ELIMINAR:\n            return {\n                ...state,\n                productoeliminar: action.payload\n            }\n        case PRODUCTO_ELIMINADO_EXITO:\n            return {\n                ...state,\n                productos: state.productos.filter( producto => producto.id !== state.productoeliminar ),\n                productoeliminar: null\n            }\n        case OBTENER_PRODUCTO_EDITAR:\n            return {\n                ...state,\n                productoeditar: action.payload\n            }\n        case PRODUCTO_EDITADO_EXITO:\n            return {\n                ...state, \n                productoeditar: null,\n                productos: state.productos.map( producto => producto.id === producto.payload.id ? action.payload : producto )\n            }\n        default:\n            return state;\n    }\n}","import {\n    MOSTRAR_ALERTA, \n    OCULTAR_ALERTA\n} from '../types';\n\n// Cada reducer tiene su propio state\nconst initialState = {\n    alerta: null\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case MOSTRAR_ALERTA:\n            return {\n                ...state,\n                alerta: action.payload\n            }\n        case OCULTAR_ALERTA:\n            return {\n                ...state,\n                alerta: null\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport productosReducer from './productosReducer';\nimport alertaReducer from './alertaReducer';\n\nexport default combineReducers({\n    productos: productosReducer,\n    alerta: alertaReducer\n})","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst store = createStore(\n    reducer,\n    compose( applyMiddleware(thunk),\n\n        typeof window === 'object' &&\n        typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? \n        window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n     )\n);\n\nexport default store;","import React from 'react';\nimport Header from './components/Header';\nimport Productos from './components/Productos';\nimport NuevoProducto from './components/NuevoProducto';\nimport EditarProducto from './components/EditarProducto';\n\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={store}>\n        <Header />\n        <div className=\"container mt-5\">\n            <Switch>\n              <Route exact path=\"/\" component={Productos} />\n              <Route exact path=\"/productos/nuevo\" component={NuevoProducto} />\n              <Route exact path=\"/productos/editar/:id\" component={EditarProducto} />\n            </Switch>\n        </div>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}